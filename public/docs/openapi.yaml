openapi: 3.0.3
info:
  title: Livepost
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/comments:
    get:
      summary: 'Display a listing of the comments.'
      operationId: displayAListingOfTheComments
      description: 'Gets a list of users'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 12
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 12
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 7
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/comments?page=1'
                    last: 'http://localhost/api/v1/comments?page=1'
                    prev: 'http://localhost/api/v1/comments?page=6'
                    next: null
                  meta:
                    current_page: 7
                    from: null
                    last_page: 1
                    links:
                      -
                        url: 'http://localhost/api/v1/comments?page=6'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/comments?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/comments'
                    per_page: 12
                    to: null
                    total: 3
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/comments?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/comments?page=1'
                      prev:
                        type: string
                        example: 'http://localhost/api/v1/comments?page=6'
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 7
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: 'http://localhost/api/v1/comments?page=6'
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/comments?page=1'
                            label: '1'
                            active: false
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: 'http://localhost/api/v1/comments?page=6'
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/comments'
                      per_page:
                        type: integer
                        example: 12
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 3
      tags:
        - 'Comment Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Comment Management'
      security: []
  '/api/v1/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    body: []
                    user_id: 7
                    post_id: 2
                    created_at: '2024-01-06 16:29:38'
                    updated_at: '2024-01-06 16:29:38'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      body:
                        type: array
                        example: []
                      user_id:
                        type: integer
                        example: 7
                      post_id:
                        type: integer
                        example: 2
                      created_at:
                        type: string
                        example: '2024-01-06 16:29:38'
                      updated_at:
                        type: string
                        example: '2024-01-06 16:29:38'
      tags:
        - 'Comment Management'
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Comment Management'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Comment Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: untitled
                      body: []
                    -
                      id: 2
                      title: untitled
                      body: []
                    -
                      id: 3
                      title: untitled
                      body: []
                    -
                      id: 5
                      title: 'title 2'
                      body: 'Body 2'
                    -
                      id: 6
                      title: 'title 2'
                      body: 'Body 2'
                    -
                      id: 7
                      title: 'title 2'
                      body: 'Body 2'
                    -
                      id: 8
                      title: 'test title 2'
                      body: 'Test body 2'
                    -
                      id: 11
                      title: 'test title 3 updated'
                      body: 'Test body 3 updated'
                    -
                      id: 12
                      title: 'test post creation'
                      body: []
                    -
                      id: 13
                      title: 'test post creation'
                      body: []
                    -
                      id: 14
                      title: 'Test post creation'
                      body: []
                    -
                      id: 15
                      title: 'Test post creation'
                      body: []
                    -
                      id: 16
                      title: est
                      body: []
                    -
                      id: 17
                      title: 'Test post creation'
                      body: []
                    -
                      id: 18
                      title: placeat
                      body: []
                    -
                      id: 19
                      title: 'Test post creation'
                      body: []
                    -
                      id: 20
                      title: quos
                      body: []
                    -
                      id: 21
                      title: 'Test post creation'
                      body: []
                    -
                      id: 22
                      title: quibusdam
                      body: []
                    -
                      id: 23
                      title: 'Test post creation'
                      body: []
                  links:
                    first: 'http://localhost/api/v1/posts?page=1'
                    last: 'http://localhost/api/v1/posts?page=2'
                    prev: null
                    next: 'http://localhost/api/v1/posts?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 2
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/posts?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/posts?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/posts?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/posts'
                    per_page: 20
                    to: 20
                    total: 36
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: untitled
                        body: []
                      -
                        id: 2
                        title: untitled
                        body: []
                      -
                        id: 3
                        title: untitled
                        body: []
                      -
                        id: 5
                        title: 'title 2'
                        body: 'Body 2'
                      -
                        id: 6
                        title: 'title 2'
                        body: 'Body 2'
                      -
                        id: 7
                        title: 'title 2'
                        body: 'Body 2'
                      -
                        id: 8
                        title: 'test title 2'
                        body: 'Test body 2'
                      -
                        id: 11
                        title: 'test title 3 updated'
                        body: 'Test body 3 updated'
                      -
                        id: 12
                        title: 'test post creation'
                        body: []
                      -
                        id: 13
                        title: 'test post creation'
                        body: []
                      -
                        id: 14
                        title: 'Test post creation'
                        body: []
                      -
                        id: 15
                        title: 'Test post creation'
                        body: []
                      -
                        id: 16
                        title: est
                        body: []
                      -
                        id: 17
                        title: 'Test post creation'
                        body: []
                      -
                        id: 18
                        title: placeat
                        body: []
                      -
                        id: 19
                        title: 'Test post creation'
                        body: []
                      -
                        id: 20
                        title: quos
                        body: []
                      -
                        id: 21
                        title: 'Test post creation'
                        body: []
                      -
                        id: 22
                        title: quibusdam
                        body: []
                      -
                        id: 23
                        title: 'Test post creation'
                        body: []
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: untitled
                        body:
                          type: array
                          example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/posts?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/posts?page=2'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/posts?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 2
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/posts?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/posts?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/posts?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/posts'
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: integer
                        example: 20
                      total:
                        type: integer
                        example: 36
      tags:
        - 'Post Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Post Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: eos
                body:
                  type: string
                  description: ''
                  example: molestiae
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: {  }
              required:
                - title
                - body
                - user_ids
      security: []
  '/api/v1/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: untitled
                    body: []
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: untitled
                      body:
                        type: array
                        example: []
      tags:
        - 'Post Management'
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Post Management'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Post Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the users.'
      operationId: displayAListingOfTheUsers
      description: 'Gets a list of users'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to'
          example: 5
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to'
            example: 5
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 40
                      name: 'Jerod Eichmann'
                      email: bahringer.petra@example.net
                      created_at: '2024-01-26 05:28:23'
                      updated_at: '2024-01-26 05:28:23'
                    -
                      id: 41
                      name: 'Leonel Quigley'
                      email: ben.upton@example.com
                      created_at: '2024-01-26 05:28:23'
                      updated_at: '2024-01-26 05:28:23'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 40
                        name: 'Jerod Eichmann'
                        email: bahringer.petra@example.net
                        created_at: '2024-01-26 05:28:23'
                        updated_at: '2024-01-26 05:28:23'
                      -
                        id: 41
                        name: 'Leonel Quigley'
                        email: ben.upton@example.com
                        created_at: '2024-01-26 05:28:23'
                        updated_at: '2024-01-26 05:28:23'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 40
                        name:
                          type: string
                          example: 'Jerod Eichmann'
                        email:
                          type: string
                          example: bahringer.petra@example.net
                        created_at:
                          type: string
                          example: '2024-01-26 05:28:23'
                        updated_at:
                          type: string
                          example: '2024-01-26 05:28:23'
      tags:
        - 'User Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 43
                    name: 'Kasandra Stamm IV'
                    email: vella.senger@example.net
                    created_at: '2024-01-26 05:28:23'
                    updated_at: '2024-01-26 05:28:23'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 43
                      name:
                        type: string
                        example: 'Kasandra Stamm IV'
                      email:
                        type: string
                        example: vella.senger@example.net
                      created_at:
                        type: string
                        example: '2024-01-26 05:28:23'
                      updated_at:
                        type: string
                        example: '2024-01-26 05:28:23'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'Email of the user.'
                  example: john.doe@example.com
              required:
                - name
                - email
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 42
                    name: 'Maiya Terry Sr.'
                    email: pdamore@example.org
                    created_at: '2024-01-26 05:28:23'
                    updated_at: '2024-01-26 05:28:23'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      name:
                        type: string
                        example: 'Maiya Terry Sr.'
                      email:
                        type: string
                        example: pdamore@example.org
                      created_at:
                        type: string
                        example: '2024-01-26 05:28:23'
                      updated_at:
                        type: string
                        example: '2024-01-26 05:28:23'
      tags:
        - 'User Management'
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 44
                    name: 'Hardy Nolan V'
                    email: rswift@example.com
                    created_at: '2024-01-26 05:28:23'
                    updated_at: '2024-01-26 05:28:23'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Hardy Nolan V'
                      email:
                        type: string
                        example: rswift@example.com
                      created_at:
                        type: string
                        example: '2024-01-26 05:28:23'
                      updated_at:
                        type: string
                        example: '2024-01-26 05:28:23'
      tags:
        - 'User Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'Email of the user.'
                  example: john.doe@example.com
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: success
                properties:
                  data:
                    type: string
                    example: success
      tags:
        - 'User Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'user id'
        example: 12
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Comment Management'
    description: "\nAPIs to manage the comment resource"
  -
    name: 'Post Management'
    description: "\nAPIs to manage the post resource"
  -
    name: 'User Management'
    description: "\nAPIs to manage the user resource"
